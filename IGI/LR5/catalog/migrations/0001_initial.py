# Generated by Django 5.0.6 on 2024-05-09 20:40

import django.core.validators
import django.db.models.deletion
import django.db.models.functions.text
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=35, unique=True)),
                ('expiration', models.DateField()),
                ('discount', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(80)])),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(auto_now_add=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('promo_code', models.CharField(blank=True, max_length=35, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Toy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_manufactured', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=1, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='ToyModal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modal', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ToyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('catalog.user',),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('catalog.user',),
        ),
        migrations.AddConstraint(
            model_name='promocode',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('code'), name='promocode_name_case_insensitive_unique', violation_error_message='Promocode already exists (case insensitive match)'),
        ),
        migrations.AddField(
            model_name='sale',
            name='toy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.toy'),
        ),
        migrations.AddField(
            model_name='toy',
            name='modals',
            field=models.ManyToManyField(to='catalog.toymodal'),
        ),
        migrations.AddField(
            model_name='sale',
            name='modal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.toymodal'),
        ),
        migrations.AddField(
            model_name='toytype',
            name='promo_codes',
            field=models.ManyToManyField(blank=True, to='catalog.promocode'),
        ),
        migrations.AddField(
            model_name='toy',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.toytype'),
        ),
        migrations.AddConstraint(
            model_name='toytype',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('name'), name='toy_type_name_case_insensitive_unique', violation_error_message='Toy type already exists (case insensitive match)'),
        ),
    ]
